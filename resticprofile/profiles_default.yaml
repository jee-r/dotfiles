# yaml-language-server: $schema=https://creativeprojects.github.io/resticprofile/jsonschema/config-1.json

version: "1"


{{ $backends := map "backend1" `rclone:backend1:/backup` "backen1" `rclone:backend2:/Backup/example` }}

{{ $sources := list "home" "root" "sys" "pkg-list" }}

# HealthCheck
{{ $healthcheck_key := "API_KEY" }}
{{ $healthcheck_url := "https://healthchecks.io/ping" }}

# Get installed packages
# Debian
#{{ $runbeforepkglist := `sh -c "dpkg-query -f '${binary:Package}\n' -W > /tmp/packages_list.txt"` }}
# ArchLinux
{{ $runbeforepkglist := `sh -c "pacman -Q > /tmp/packages_list.txt"` }}

{{ define "exclude_base" }}
      - "/var/cache/*"
      - "/var/tmp/*"
      - "/proc/*"
      - "/sys/*"
      - "/dev/*"
      - "/run/*"
      - "/tmp/*"
      - "/mnt/*"
      - "/swapfile"
      - "/root/.cache"
      - "/home/**/.cache"
      - "/home/*/.local/share/gnome-boxes/images/*"
      - "/home/*/.local/share/Trash/*"
{{ end }}

{{ define "exclude_sys" }}
      - "/home"
      - "/root"
{{ end }}

    
global:
  default-command: snapshots
  nice: 15
  ionice: true
  ionice-class: 2
  min-memory: 100
  priority: low
  restic-arguments-filter: true
  initialize: false
  # Retry a restic command that failed on acquiring a lock every minute 
  # (at least), for up to the time specified in "--lock-wait duration". 
  restic-lock-retry-after: 1m
  # Ask restic to unlock a stale lock when its age is more than X hours
  # and the option "force-inactive-lock" is enabled in the profile.
  restic-stale-lock-age: 3h

groups:
  all:
{{ range $source := $sources }}
  {{ range $backend_name, $backend_repo := $backends }}
    - {{ $source }}-{{ $backend_name }}
  {{ end }}
{{ end }}
{{ range $backend_name, $backends_repo := $backends }}
  to-{{ $backend_name }}:
    {{ range $source := $sources }}
    - {{ $source }}-{{ $backend_name }}
  {{ end }}
{{ end }}
{{ range $source := $sources }}
  {{ $source }}:
  {{ range $backend_name, $backend_repo := $backends }}
    - {{ $source }}-{{ $backend_name }}
  {{ end }}
{{ end }}

{{ range $backend_name, $backends_repo := $backends }}
{{ $backend_name }}:
  inherit: base
  repository: "{{ $backends_repo }}"
  password-file: "password_{{ $backend_name }}.txt"
{{ end }}

{{ range $source := $sources }}
  {{ range $backend_name, $backends_repo := $backends }}
{{ $source }}-{{ $backend_name }}:
  inherit: {{ $source }}
  repository: "{{ $backends_repo }}"
  password-file: "password_{{ $backend_name }}.txt"
{{ end }}
{{ end }}

home:
  inherit: base
  backup:
    source:
      - "/home"

root:
  inherit: base
  backup:
    source: 
      - "/root"

pkg-list:
  inherit: base
  run-before: {{ $runbeforepkglist }}
  backup:
    source:
      - "/tmp/packages_list.txt"

sys: 
  inherit: base
  backup:
    source:
      - "/"
    exclude:
{{ template "exclude_base" . }}
{{ template "exclude_sys" . }}

base:
  lock: "/tmp/resticprofile-{{ .Profile.Name }}.lock"
  force-inactive-lock: true  
  backup:
    verbose: true
    one-file-system: true
    exclude-caches: true
    exclude: 
{{ template "exclude_base" . }}
    send-before:
      - method: HEAD
        url: "{{ $healthcheck_url }}/{{ $healthcheck_key }}/backup-{{ .Profile.Name }}/start"
    send-after:
      - method: HEAD
        url: "{{ $healthcheck_url }}/{{ $healthcheck_key }}/backup-{{ .Profile.Name }}"
    send-after-fail:
      - method: POST
        url: "{{ $healthcheck_url }}/{{ $healthcheck_key }}/backup-{{ .Profile.Name }}/fail"
        body: "${ERROR}\n\n${ERROR_STDERR}"
        headers:
          - name: Content-Type
            value: "text/plain; charset=UTF-8"
    schedule: "*-*-* 12:30:00"
    schedule-permission: system
    schedule-priority: background
    schedule-lock-mode: default
    schedule-lock-wait: 15m30s
  retention:
    before-backup: false
    after-backup: true
    keep-daily: 7
    keep-weekly: 5
    keep-monthly: 12
    keep-yearly: 3
    prune: false
  snapshots:
    path: true
  prune:
    schedule: "weekly"
    schedule-permission: system
    schedule-lock-wait: 1h
    send-before:
      - method: HEAD
        url: "{{ $healthcheck_url }}/{{ $healthcheck_key }}/prune-{{ .Profile.Name }}/start"
    send-after:
      - method: HEAD
        url: "{{ $healthcheck_url }}/{{ $healthcheck_key }}/prune-{{ .Profile.Name }}"
    send-after-fail:
      - method: POST
        url: "{{ $healthcheck_url }}/{{ $healthcheck_key }}/prune-{{ .Profile.Name }}/fail"
        body: "${ERROR}\n\n${ERROR_STDERR}"
        headers:
          - name: Content-Type
            value: "text/plain; charset=UTF-8"
  check:
    schedule: "weekly"
    schedule-permission: system
    schedule-lock-wait: 1h
    send-before:
      - method: HEAD
        url: "{{ $healthcheck_url }}/{{ $healthcheck_key }}/check-{{ .Profile.Name }}/start"
    send-after:
      - method: HEAD
        url: "{{ $healthcheck_url }}/{{ $healthcheck_key }}/check-{{ .Profile.Name }}"
    send-after-fail:
      - method: POST
        url: "{{ $healthcheck_url }}/{{ $healthcheck_key }}/check-{{ .Profile.Name }}/fail"
        body: "${ERROR}\n\n${ERROR_STDERR}"
        headers:
          - name: Content-Type
            value: "text/plain; charset=UTF-8"
